openapi: 3.0.3
info:
  title: planqcapi
  version: 1.0.0
paths:


  /info:
    get:
      tags:
        - info
      operationId: api.info
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
        '405':
          description: Invalid input

  /job:
    post:
      tags:
        - openqasm
      operationId: api.submit
      requestBody:
        description: Input a qasm string
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenQasmRequest'
        required: true
      responses:
        '202':
          description: Job accepted and is processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAccepted'
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Invalid input
        '503':
          description: Queue is full
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /job/{jobId}/status:
    get:
      tags:
        - openqasm
      operationId: api.status
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
        '404':
          description: Job not found

  /job/{jobId}/result:
    get:
      tags:
        - openqasm
      operationId: api.result
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenQasmResponse'
        '404':
          description: Job not found
        '409':
          description: Job not finished


components:
  schemas:
    Info:
      type: object
      properties:
        status:
          type: string
          example: up

    JobAccepted:
      type: object
      properties:
        jobId:
          type: string
          description: The unique identifier for the job
      required:
        - jobId

    JobStatus:
      type: object
      properties:
        jobId:
          type: string
          description: The unique identifier for the job
        status:
          type: string
          description: The current status of the job
          enum: [queued, running, completed, failed]
        error_message:
          type: string
          description: Error message if status is "failed"
      required:
        - jobId
        - status

    OpenQasmRequest:
      required:
        - openqasm
        - shots
        - origin
        - token
      type: object
      properties:
        openqasm:
          type: string
          description: OpenQasm 3.0 string as base64
          example: T1BFTlFBU00gMy4wOwppbmNsdWRlICJzdGRnYXRlcy5pbmMiOwpxdWJpdFsxXSBxOwpiaXRbMV0gYzsKaCBxWzBdOwpjWzBdID0gbWVhc3VyZSBxWzBdOwo=
        shots:
          type: integer
          description: How many times the circuit should be executed
          example: 10
        origin:
          type: string
          description: From where the API is called
          example: cirq
        token:
          description: AuthToken
          type: string

    OpenQasmResponse:
      type: object
      properties:
        openqasm:
          type: string
          description: OpenQasm 3.0 string as base64
          example: T1BFTlFBU00gMy4wOwppbmNsdWRlICJzdGRnYXRlcy5pbmMiOwpxdWJpdFsxXSBxOwpiaXRbMV0gYzsKaCBxWzBdOwpjWzBdID0gbWVhc3VyZSBxWzBdOwo=
        results:
          type: array
          items:
            type: string
            example: ["00", "11", "00"]

    Error:
      type: object
      properties:
        message:
          type: string
          example: Expired token

